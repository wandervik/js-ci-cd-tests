name: DEV S3 Continuous Deployment

on:
  push:
    branches: [ 'release' ]

env:
  AWS_REGION: "eu-central-1"
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_S3_PATH_DEV: s3://intergi-duplicate/pageos
  AWS_S3_BUCKET: intergi-duplicate
  DISTRIBUTION_ID: E3MY6RLJJ44XBK


jobs:
  build-deploy-dev:
    outputs:
      version: ${{ steps.new_version.outputs.prop }}
      folder-check: ${{ steps.folder-check.outputs.result }}

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Get version
        id: version
        uses: notiz-dev/github-action-json-property@release
        with:
            path: 'package.json'
            prop_path: 'version'
      - run: echo "prev_version=${{steps.version.outputs.prop}}" >> $GITHUB_ENV

      - run: |
          mkdir temp
          cp package.json temp/package.json

      - name:  'Automated Version Bump'
        uses:  'phips28/gh-action-bump-version@master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PACKAGEJSON_DIR:  'temp'
        with:
          minor-wording:  'MINOR_UPDATE'
          major-wording:  'MAJOR_UPDATE'
          patch-wording:  'PATCH_UPDATE'
          skip-commit:  'true'
          skip-tag: 'true'

      - name: Get new version
        id: new_version
        uses: notiz-dev/github-action-json-property@release
        with:
            path: 'temp/package.json'
            prop_path: 'version'
      - run: echo "new_version=${{steps.new_version.outputs.prop}}" >> $GITHUB_ENV

      - name: Check if version isn't empty
        run: if [[ -z ${{ env.new_version }} ]]; then exit 1; else echo "Version isn't empty"; fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # - name: Setup node
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: 16.10.0

      # - name: Install dependencies
      #   run: |
      #     touch ~/.netrc
      #     echo "machine github.com login ${{ secrets.REPOSITORY_ACCESS_TOKEN }}" > ~/.netrc
      #     npm ci
      #   env:
      #     NPM_TOKEN: ${{ secrets.REPOSITORY_ACCESS_TOKEN_PACKAGES }}

      # - run: npm run buildCDN:dev

      - name: Check if the version will be overrided
        id: folder-check
        run: |
          echo "::set-output name=result::$(if [[ $(aws s3 ls ${{ env.AWS_S3_PATH_DEV }}/${{ env.new_version }}| head) ]]; then echo "overriding"; else echo "new-folder"; fi)"

      - name: Push to bucket
        run: |
          aws s3 sync dist ${{ env.AWS_S3_PATH_DEV }}/${{ env.new_version }} --acl public-read --delete

      - uses: actions/checkout@v2

      - name: Update version in env file
        uses: deef0000dragon1/json-edit-action/@v1
        env:
          KEY: 'dev_version'
          VALUE: ${{ env.new_version }}
          FILE: workflow-vars.json

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
         commit_message: Bump version
         branch: release
         file_pattern: workflow-vars.json

      - name: Checkout changelog branch
        uses: actions/checkout@v2
        with:
          ref: changelog

      - name: Pull repositiry
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: git pull

      - name: Get current timestamp
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: -5
          format: 'YYYY-MM-DD-HH-mm-ss'

      - name: Write changelog
        env:
          TIME: "${{ steps.time.outputs.time }}"
        run: |
          echo "## Version ${{ env.new_version }}" >> CHANGELOG.md
          echo "[ ${{ env.TIME }} ] : deployed on dev <br />" >> CHANGELOG.md
          echo "Last commit message: ${{ github.event.head_commit.message }}" >> CHANGELOG.md

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
         commit_message: Automated Change
         branch: changelog
         file_pattern: CHANGELOG.md


  invalidation:
    runs-on: ubuntu-latest
    needs: build-deploy-dev
    if: needs.build-deploy-dev.outputs.folder-check == 'overriding'

    steps:
      - name: Invalidate CloudFront
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ env.DISTRIBUTION_ID }}
          PATHS: "/pageos/${{needs.build-deploy-dev.outputs.version}}/*"
          AWS_REGION: ${{ env.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
